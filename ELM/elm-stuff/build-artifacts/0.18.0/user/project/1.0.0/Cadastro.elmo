var _user$project$Cadastro$encodeCad = function (cad) {
	var lstCad = {
		ctor: '::',
		_0: {
			ctor: '_Tuple2',
			_0: 'email',
			_1: _elm_lang$core$Json_Encode$string(cad.email)
		},
		_1: {
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'senha',
				_1: _elm_lang$core$Json_Encode$string(cad.senha)
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'nome',
					_1: _elm_lang$core$Json_Encode$string(cad.nome)
				},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'dtNascimento',
						_1: _elm_lang$core$Json_Encode$string(cad.dtNascimento)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'sexo',
							_1: _elm_lang$core$Json_Encode$string(cad.sexo)
						},
						_1: {ctor: '[]'}
					}
				}
			}
		}
	};
	return _elm_lang$core$Json_Encode$object(lstCad);
};
var _user$project$Cadastro$urlPOST = 'https://haskelleta-romefeller.c9users.io/cadastro/inserir';
var _user$project$Cadastro$httpErrorRetorno = function (error) {
	var _p0 = error;
	switch (_p0.ctor) {
		case 'BadUrl':
			return A2(_elm_lang$core$Basics_ops['++'], '[ERRO HTTP] Bad Url: ', _p0._0);
		case 'Timeout':
			return '[ERRO HTTP] Timeout';
		case 'NetworkError':
			return '[ERRO HTTP] Network Error';
		case 'BadStatus':
			return A2(
				_elm_lang$core$Basics_ops['++'],
				'[ERRO HTTP] Status: ',
				_elm_lang$core$Basics$toString(_p0._0.status.code));
		default:
			return A2(
				_elm_lang$core$Basics_ops['++'],
				'[ERRO HTTP] Payload incorreto: ',
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(_p0._0),
					A2(
						_elm_lang$core$Basics_ops['++'],
						'(',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(_p0._1.status.code),
							')'))));
	}
};
var _user$project$Cadastro$Retorno = F2(
	function (a, b) {
		return {mensagem: a, codigo: b};
	});
var _user$project$Cadastro$decodeInserirRetorno = A3(
	_elm_lang$core$Json_Decode$map2,
	_user$project$Cadastro$Retorno,
	A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'mensagem',
			_1: {ctor: '[]'}
		},
		_elm_lang$core$Json_Decode$int),
	A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'codigo',
			_1: {ctor: '[]'}
		},
		_elm_lang$core$Json_Decode$int));
var _user$project$Cadastro$Cadastro = F5(
	function (a, b, c, d, e) {
		return {email: a, nome: b, dtNascimento: c, senha: d, sexo: e};
	});
var _user$project$Cadastro$Model = F7(
	function (a, b, c, d, e, f, g) {
		return {nome: a, dtNascimento: b, sexo: c, email: d, senha: e, retorno: f, error: g};
	});
var _user$project$Cadastro$init = function () {
	var retornoIni = A2(_user$project$Cadastro$Retorno, 0, 0);
	return A7(_user$project$Cadastro$Model, '', '', '', '', '', retornoIni, '');
}();
var _user$project$Cadastro$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _user$project$Cadastro$postCadastro = F2(
	function (cad, url) {
		var requestBody = _elm_lang$http$Http$jsonBody(
			_user$project$Cadastro$encodeCad(cad));
		return A2(
			_elm_lang$http$Http$send,
			_user$project$Cadastro$Response,
			A3(_elm_lang$http$Http$post, url, requestBody, _user$project$Cadastro$decodeInserirRetorno));
	});
var _user$project$Cadastro$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'Nome':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{nome: _p1._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Email':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{email: _p1._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Senha':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							senha: _billstclair$elm_sha256$Sha256$sha256(_p1._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'DtNascimento':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{dtNascimento: _p1._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Sexo':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{sexo: _p1._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Submit':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(_user$project$Cadastro$postCadastro, model, _user$project$Cadastro$urlPOST)
				};
			default:
				var _p2 = _p1._0;
				if (_p2.ctor === 'Err') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								error: _user$project$Cadastro$httpErrorRetorno(_p2._0)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{retorno: _p2._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
		}
	});
var _user$project$Cadastro$Submit = {ctor: 'Submit'};
var _user$project$Cadastro$Senha = function (a) {
	return {ctor: 'Senha', _0: a};
};
var _user$project$Cadastro$Email = function (a) {
	return {ctor: 'Email', _0: a};
};
var _user$project$Cadastro$Sexo = function (a) {
	return {ctor: 'Sexo', _0: a};
};
var _user$project$Cadastro$radio = function (value) {
	return A2(
		_elm_lang$html$Html$label,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$type_('radio'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$name('font-size'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_user$project$Cadastro$Sexo),
							_1: {ctor: '[]'}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html$text(value),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Cadastro$DtNascimento = function (a) {
	return {ctor: 'DtNascimento', _0: a};
};
var _user$project$Cadastro$Nome = function (a) {
	return {ctor: 'Nome', _0: a};
};
var _user$project$Cadastro$view = function (model) {
	return A2(
		_elm_lang$html$Html$section,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('center-align form-margin'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('elm-form col s12 m6 l6'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('input-field'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$input,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$type_('text'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$required(true),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('validate'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Events$onInput(_user$project$Cadastro$Nome),
												_1: {ctor: '[]'}
											}
										}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$label,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('active'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Name'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('input-field'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$input,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$type_('email'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$required(true),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('validate'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Events$onInput(_user$project$Cadastro$Email),
													_1: {ctor: '[]'}
												}
											}
										}
									},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$label,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('active'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Email'),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('input-field'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$input,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$type_('password'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$required(true),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('validate'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Events$onInput(_user$project$Cadastro$Senha),
														_1: {ctor: '[]'}
													}
												}
											}
										},
										{ctor: '[]'}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$label,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('active'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Password'),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('input-field'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$input,
											{ctor: '[]'},
											{ctor: '[]'}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$label,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('active'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('Data Nascimento'),
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$button,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$type_('submit'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('btn waves-effect green center-align'),
												_1: {ctor: '[]'}
											}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Cadastrar'),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Cadastro$main = _elm_lang$html$Html$program(
	{
		init: {ctor: '_Tuple2', _0: _user$project$Cadastro$init, _1: _elm_lang$core$Platform_Cmd$none},
		view: _user$project$Cadastro$view,
		update: _user$project$Cadastro$update,
		subscriptions: function (_p3) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
