var _user$project$BuscaFilme$formatarNome = function (nome) {
	return A2(
		_elm_lang$core$String$join,
		'%20',
		A2(_elm_lang$core$String$split, ' ', nome));
};
var _user$project$BuscaFilme$urlFoto = 'http://image.tmdb.org/t/p/w154/';
var _user$project$BuscaFilme$formatFilmeResult = function (fr) {
	var linhaFoto = function () {
		var _p0 = fr.poster_path;
		if (_p0.ctor === 'Nothing') {
			return '---';
		} else {
			return A2(_elm_lang$core$Basics_ops['++'], _user$project$BuscaFilme$urlFoto, _p0._0);
		}
	}();
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('info-filme'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$img,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('responsive-img'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$src(linhaFoto),
						_1: {ctor: '[]'}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$p,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									A2(
										_elm_lang$core$Basics_ops['++'],
										'ID: ',
										_elm_lang$core$Basics$toString(fr.id))),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$p,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(
										A2(_elm_lang$core$Basics_ops['++'], 'Titulo: ', fr.title)),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$p,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(
											A2(
												_elm_lang$core$Basics_ops['++'],
												'Nota:',
												_elm_lang$core$Basics$toString(fr.vote_average))),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$p,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(
												A2(_elm_lang$core$Basics_ops['++'], 'Data de lancamento:', fr.release_date)),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$p,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text(
													A2(_elm_lang$core$Basics_ops['++'], 'Sinopse: ', fr.overview)),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$BuscaFilme$viewFilme = function (f) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$label,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						A2(
							_elm_lang$core$Basics_ops['++'],
							'pagina ',
							A2(
								_elm_lang$core$Basics_ops['++'],
								_elm_lang$core$Basics$toString(f.page),
								A2(
									_elm_lang$core$Basics_ops['++'],
									' - ',
									A2(
										_elm_lang$core$Basics_ops['++'],
										'total :',
										A2(
											_elm_lang$core$Basics_ops['++'],
											_elm_lang$core$Basics$toString(f.total_results),
											A2(
												_elm_lang$core$Basics_ops['++'],
												' - ',
												A2(
													_elm_lang$core$Basics_ops['++'],
													'total de paginas: ',
													_elm_lang$core$Basics$toString(f.total_pages))))))))),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$br,
					{ctor: '[]'},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$h5,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('DADOS DA BUSCA: '),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$br,
									{ctor: '[]'},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('grid'),
											_1: {ctor: '[]'}
										},
										A2(_elm_lang$core$List$map, _user$project$BuscaFilme$formatFilmeResult, f.results)),
									_1: {ctor: '[]'}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$BuscaFilme$httpErrorString = function (error) {
	var _p1 = error;
	switch (_p1.ctor) {
		case 'BadUrl':
			return A2(_elm_lang$core$Basics_ops['++'], '[ERRO HTTP] Bad Url: ', _p1._0);
		case 'Timeout':
			return '[ERRO HTTP] Timeout';
		case 'NetworkError':
			return '[ERRO HTTP] Network Error';
		case 'BadStatus':
			return A2(
				_elm_lang$core$Basics_ops['++'],
				'[ERRO HTTP] Status: ',
				_elm_lang$core$Basics$toString(_p1._0.status.code));
		default:
			return A2(
				_elm_lang$core$Basics_ops['++'],
				'[ERRO HTTP] Payload incorreto: ',
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(_p1._0),
					A2(
						_elm_lang$core$Basics_ops['++'],
						'(',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(_p1._1.status.code),
							')'))));
	}
};
var _user$project$BuscaFilme$FilmeResult = F6(
	function (a, b, c, d, e, f) {
		return {id: a, title: b, vote_average: c, poster_path: d, overview: e, release_date: f};
	});
var _user$project$BuscaFilme$decodeFilmeResult = A7(
	_elm_lang$core$Json_Decode$map6,
	_user$project$BuscaFilme$FilmeResult,
	A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'id',
			_1: {ctor: '[]'}
		},
		_elm_lang$core$Json_Decode$int),
	A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'title',
			_1: {ctor: '[]'}
		},
		_elm_lang$core$Json_Decode$string),
	A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'vote_average',
			_1: {ctor: '[]'}
		},
		_elm_lang$core$Json_Decode$float),
	_elm_lang$core$Json_Decode$maybe(
		A2(
			_elm_lang$core$Json_Decode$at,
			{
				ctor: '::',
				_0: 'poster_path',
				_1: {ctor: '[]'}
			},
			_elm_lang$core$Json_Decode$string)),
	A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'overview',
			_1: {ctor: '[]'}
		},
		_elm_lang$core$Json_Decode$string),
	A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'release_date',
			_1: {ctor: '[]'}
		},
		_elm_lang$core$Json_Decode$string));
var _user$project$BuscaFilme$Filme = F4(
	function (a, b, c, d) {
		return {page: a, total_results: b, total_pages: c, results: d};
	});
var _user$project$BuscaFilme$decodeFilme = A5(
	_elm_lang$core$Json_Decode$map4,
	_user$project$BuscaFilme$Filme,
	A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'page',
			_1: {ctor: '[]'}
		},
		_elm_lang$core$Json_Decode$int),
	A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'total_results',
			_1: {ctor: '[]'}
		},
		_elm_lang$core$Json_Decode$int),
	A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'total_pages',
			_1: {ctor: '[]'}
		},
		_elm_lang$core$Json_Decode$int),
	A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'results',
			_1: {ctor: '[]'}
		},
		_elm_lang$core$Json_Decode$list(_user$project$BuscaFilme$decodeFilmeResult)));
var _user$project$BuscaFilme$Model = F3(
	function (a, b, c) {
		return {nomeFilme: a, error: b, resultadoBusca: c};
	});
var _user$project$BuscaFilme$init = function () {
	var initFilme = A4(
		_user$project$BuscaFilme$Filme,
		0,
		0,
		0,
		{ctor: '[]'});
	return A3(_user$project$BuscaFilme$Model, '', '', initFilme);
}();
var _user$project$BuscaFilme$Response = function (a) {
	return {ctor: 'Response', _0: a};
};
var _user$project$BuscaFilme$getFilme = function (nomefilme) {
	var url = A2(
		_elm_lang$core$Basics_ops['++'],
		'https://api.themoviedb.org/3/search/movie?api_key=3a97c7968533c6effacc04e1449450b1&language=en-US&query=',
		A2(_elm_lang$core$Basics_ops['++'], nomefilme, '&page=1&include_adult=false'));
	return A2(
		_elm_lang$http$Http$send,
		_user$project$BuscaFilme$Response,
		A2(_elm_lang$http$Http$get, url, _user$project$BuscaFilme$decodeFilme));
};
var _user$project$BuscaFilme$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'NomeFilme':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							nomeFilme: _user$project$BuscaFilme$formatarNome(_p2._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Submit':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							resultadoBusca: A4(
								_user$project$BuscaFilme$Filme,
								0,
								0,
								0,
								{ctor: '[]'}),
							error: ''
						}),
					_1: _user$project$BuscaFilme$getFilme(model.nomeFilme)
				};
			default:
				var _p3 = _p2._0;
				if (_p3.ctor === 'Err') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								error: _user$project$BuscaFilme$httpErrorString(_p3._0)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{resultadoBusca: _p3._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
		}
	});
var _user$project$BuscaFilme$Submit = {ctor: 'Submit'};
var _user$project$BuscaFilme$NomeFilme = function (a) {
	return {ctor: 'NomeFilme', _0: a};
};
var _user$project$BuscaFilme$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('divGeral'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('container center-align'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('input-field inline'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$input,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$type_('text'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('validate'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$placeholder('nome do filme que deseja buscar'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$required(true),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Events$onInput(_user$project$BuscaFilme$NomeFilme),
													_1: {ctor: '[]'}
												}
											}
										}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$button,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('btn green waves-effect'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onClick(_user$project$BuscaFilme$Submit),
											_1: {ctor: '[]'}
										}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('BUSCAR!'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('center-align'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$style(
									{
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'color', _1: 'red'},
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									_elm_lang$core$Basics$toString(model.error)),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _user$project$BuscaFilme$viewFilme(model.resultadoBusca),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$BuscaFilme$main = _elm_lang$html$Html$program(
	{
		init: {ctor: '_Tuple2', _0: _user$project$BuscaFilme$init, _1: _elm_lang$core$Platform_Cmd$none},
		view: _user$project$BuscaFilme$view,
		update: _user$project$BuscaFilme$update,
		subscriptions: function (_p4) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
